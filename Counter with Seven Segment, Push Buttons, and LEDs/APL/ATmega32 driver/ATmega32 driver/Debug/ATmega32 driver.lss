
ATmega32 driver.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000083a  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000008ae  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000001  00800060  00800060  000008ae  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000008ae  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000008e0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000130  00000000  00000000  0000091c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001a61  00000000  00000000  00000a4c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008bc  00000000  00000000  000024ad  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000aa8  00000000  00000000  00002d69  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001f4  00000000  00000000  00003814  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000639  00000000  00000000  00003a08  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000ef1  00000000  00000000  00004041  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000e0  00000000  00000000  00004f32  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__ctors_end>
   4:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
   8:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
   c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  10:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  14:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  18:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  1c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  20:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  24:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  28:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  2c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  30:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  34:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  38:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  3c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  40:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  44:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  48:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  4c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  50:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  54:	99 00       	.word	0x0099	; ????
  56:	ad 00       	.word	0x00ad	; ????
  58:	c1 00       	.word	0x00c1	; ????
  5a:	d5 00       	.word	0x00d5	; ????
  5c:	e9 00       	.word	0x00e9	; ????
  5e:	fd 00       	.word	0x00fd	; ????
  60:	11 01       	movw	r2, r2
  62:	25 01       	movw	r4, r10
  64:	39 01       	movw	r6, r18
  66:	4d 01       	movw	r8, r26
  68:	6e 01       	movw	r12, r28
  6a:	82 01       	movw	r16, r4
  6c:	96 01       	movw	r18, r12
  6e:	aa 01       	movw	r20, r20
  70:	be 01       	movw	r22, r28
  72:	d2 01       	movw	r26, r4
  74:	e6 01       	movw	r28, r12
  76:	fa 01       	movw	r30, r20
  78:	0e 02       	muls	r16, r30
  7a:	22 02       	muls	r18, r18

0000007c <__ctors_end>:
  7c:	11 24       	eor	r1, r1
  7e:	1f be       	out	0x3f, r1	; 63
  80:	cf e5       	ldi	r28, 0x5F	; 95
  82:	d8 e0       	ldi	r29, 0x08	; 8
  84:	de bf       	out	0x3e, r29	; 62
  86:	cd bf       	out	0x3d, r28	; 61

00000088 <__do_copy_data>:
  88:	10 e0       	ldi	r17, 0x00	; 0
  8a:	a0 e6       	ldi	r26, 0x60	; 96
  8c:	b0 e0       	ldi	r27, 0x00	; 0
  8e:	ea e3       	ldi	r30, 0x3A	; 58
  90:	f8 e0       	ldi	r31, 0x08	; 8
  92:	02 c0       	rjmp	.+4      	; 0x98 <__do_copy_data+0x10>
  94:	05 90       	lpm	r0, Z+
  96:	0d 92       	st	X+, r0
  98:	a0 36       	cpi	r26, 0x60	; 96
  9a:	b1 07       	cpc	r27, r17
  9c:	d9 f7       	brne	.-10     	; 0x94 <__do_copy_data+0xc>

0000009e <__do_clear_bss>:
  9e:	20 e0       	ldi	r18, 0x00	; 0
  a0:	a0 e6       	ldi	r26, 0x60	; 96
  a2:	b0 e0       	ldi	r27, 0x00	; 0
  a4:	01 c0       	rjmp	.+2      	; 0xa8 <.do_clear_bss_start>

000000a6 <.do_clear_bss_loop>:
  a6:	1d 92       	st	X+, r1

000000a8 <.do_clear_bss_start>:
  a8:	a1 36       	cpi	r26, 0x61	; 97
  aa:	b2 07       	cpc	r27, r18
  ac:	e1 f7       	brne	.-8      	; 0xa6 <.do_clear_bss_loop>
  ae:	0e 94 87 03 	call	0x70e	; 0x70e <main>
  b2:	0c 94 1b 04 	jmp	0x836	; 0x836 <_exit>

000000b6 <__bad_interrupt>:
  b6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ba <BCD_to_SEVEN_SEG_Init>:
}

void SEVEN_SEG_Blink(unsigned char port)  
{
	    #if defined CC
		DIO_WritePort(port,0x08);
  ba:	cf 93       	push	r28
  bc:	c8 2f       	mov	r28, r24
  be:	61 11       	cpse	r22, r1
  c0:	13 c0       	rjmp	.+38     	; 0xe8 <BCD_to_SEVEN_SEG_Init+0x2e>
  c2:	41 e0       	ldi	r20, 0x01	; 1
  c4:	0e 94 3e 02 	call	0x47c	; 0x47c <DIO_SetPinDir>
  c8:	41 e0       	ldi	r20, 0x01	; 1
  ca:	61 e0       	ldi	r22, 0x01	; 1
  cc:	8c 2f       	mov	r24, r28
  ce:	0e 94 3e 02 	call	0x47c	; 0x47c <DIO_SetPinDir>
  d2:	41 e0       	ldi	r20, 0x01	; 1
  d4:	62 e0       	ldi	r22, 0x02	; 2
  d6:	8c 2f       	mov	r24, r28
  d8:	0e 94 3e 02 	call	0x47c	; 0x47c <DIO_SetPinDir>
  dc:	41 e0       	ldi	r20, 0x01	; 1
  de:	63 e0       	ldi	r22, 0x03	; 3
  e0:	8c 2f       	mov	r24, r28
  e2:	0e 94 3e 02 	call	0x47c	; 0x47c <DIO_SetPinDir>
  e6:	15 c0       	rjmp	.+42     	; 0x112 <BCD_to_SEVEN_SEG_Init+0x58>
  e8:	61 30       	cpi	r22, 0x01	; 1
  ea:	99 f4       	brne	.+38     	; 0x112 <BCD_to_SEVEN_SEG_Init+0x58>
  ec:	41 e0       	ldi	r20, 0x01	; 1
  ee:	64 e0       	ldi	r22, 0x04	; 4
  f0:	0e 94 3e 02 	call	0x47c	; 0x47c <DIO_SetPinDir>
  f4:	41 e0       	ldi	r20, 0x01	; 1
  f6:	65 e0       	ldi	r22, 0x05	; 5
  f8:	8c 2f       	mov	r24, r28
  fa:	0e 94 3e 02 	call	0x47c	; 0x47c <DIO_SetPinDir>
  fe:	41 e0       	ldi	r20, 0x01	; 1
 100:	66 e0       	ldi	r22, 0x06	; 6
 102:	8c 2f       	mov	r24, r28
 104:	0e 94 3e 02 	call	0x47c	; 0x47c <DIO_SetPinDir>
 108:	41 e0       	ldi	r20, 0x01	; 1
 10a:	67 e0       	ldi	r22, 0x07	; 7
 10c:	8c 2f       	mov	r24, r28
 10e:	0e 94 3e 02 	call	0x47c	; 0x47c <DIO_SetPinDir>
 112:	cf 91       	pop	r28
 114:	08 95       	ret

00000116 <BCD_to_SEVEN_SEG_Write>:
		DIO_WritePort(port,~0x08);
		#endif
}

void BCD_to_SEVEN_SEG_Write(unsigned char port, unsigned char half, unsigned char value)
{
 116:	cf 93       	push	r28
 118:	c8 2f       	mov	r28, r24
	if(half == 0)
 11a:	61 11       	cpse	r22, r1
 11c:	d2 c0       	rjmp	.+420    	; 0x2c2 <BCD_to_SEVEN_SEG_Write+0x1ac>
	{
		switch (value)
 11e:	50 e0       	ldi	r21, 0x00	; 0
 120:	4a 30       	cpi	r20, 0x0A	; 10
 122:	51 05       	cpc	r21, r1
 124:	08 f0       	brcs	.+2      	; 0x128 <BCD_to_SEVEN_SEG_Write+0x12>
 126:	a1 c1       	rjmp	.+834    	; 0x46a <__EEPROM_REGION_LENGTH__+0x6a>
 128:	fa 01       	movw	r30, r20
 12a:	e6 5d       	subi	r30, 0xD6	; 214
 12c:	ff 4f       	sbci	r31, 0xFF	; 255
 12e:	0c 94 15 04 	jmp	0x82a	; 0x82a <__tablejump2__>
		{
		case 0:
			DIO_WritePin(port, pin0, 0);
 132:	40 e0       	ldi	r20, 0x00	; 0
 134:	60 e0       	ldi	r22, 0x00	; 0
 136:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_WritePin>
			DIO_WritePin(port, pin1, 0);
 13a:	40 e0       	ldi	r20, 0x00	; 0
 13c:	61 e0       	ldi	r22, 0x01	; 1
 13e:	8c 2f       	mov	r24, r28
 140:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_WritePin>
			DIO_WritePin(port, pin2, 0);
 144:	40 e0       	ldi	r20, 0x00	; 0
 146:	62 e0       	ldi	r22, 0x02	; 2
 148:	8c 2f       	mov	r24, r28
 14a:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_WritePin>
			DIO_WritePin(port, pin3, 0);
 14e:	40 e0       	ldi	r20, 0x00	; 0
 150:	63 e0       	ldi	r22, 0x03	; 3
 152:	8c 2f       	mov	r24, r28
 154:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_WritePin>
			break;
 158:	88 c1       	rjmp	.+784    	; 0x46a <__EEPROM_REGION_LENGTH__+0x6a>
		case 1:
			DIO_WritePin(port, pin0, 1);
 15a:	41 e0       	ldi	r20, 0x01	; 1
 15c:	60 e0       	ldi	r22, 0x00	; 0
 15e:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_WritePin>
			DIO_WritePin(port, pin1, 0);
 162:	40 e0       	ldi	r20, 0x00	; 0
 164:	61 e0       	ldi	r22, 0x01	; 1
 166:	8c 2f       	mov	r24, r28
 168:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_WritePin>
			DIO_WritePin(port, pin2, 0);
 16c:	40 e0       	ldi	r20, 0x00	; 0
 16e:	62 e0       	ldi	r22, 0x02	; 2
 170:	8c 2f       	mov	r24, r28
 172:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_WritePin>
			DIO_WritePin(port, pin3, 0);
 176:	40 e0       	ldi	r20, 0x00	; 0
 178:	63 e0       	ldi	r22, 0x03	; 3
 17a:	8c 2f       	mov	r24, r28
 17c:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_WritePin>
			break;
 180:	74 c1       	rjmp	.+744    	; 0x46a <__EEPROM_REGION_LENGTH__+0x6a>
		case 2:
			DIO_WritePin(port, pin0, 0);
 182:	40 e0       	ldi	r20, 0x00	; 0
 184:	60 e0       	ldi	r22, 0x00	; 0
 186:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_WritePin>
			DIO_WritePin(port, pin1, 1);
 18a:	41 e0       	ldi	r20, 0x01	; 1
 18c:	61 e0       	ldi	r22, 0x01	; 1
 18e:	8c 2f       	mov	r24, r28
 190:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_WritePin>
			DIO_WritePin(port, pin2, 0);
 194:	40 e0       	ldi	r20, 0x00	; 0
 196:	62 e0       	ldi	r22, 0x02	; 2
 198:	8c 2f       	mov	r24, r28
 19a:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_WritePin>
			DIO_WritePin(port, pin3, 0);
 19e:	40 e0       	ldi	r20, 0x00	; 0
 1a0:	63 e0       	ldi	r22, 0x03	; 3
 1a2:	8c 2f       	mov	r24, r28
 1a4:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_WritePin>
			break;
 1a8:	60 c1       	rjmp	.+704    	; 0x46a <__EEPROM_REGION_LENGTH__+0x6a>
		case 3:
			DIO_WritePin(port, pin0, 1);
 1aa:	41 e0       	ldi	r20, 0x01	; 1
 1ac:	60 e0       	ldi	r22, 0x00	; 0
 1ae:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_WritePin>
			DIO_WritePin(port, pin1, 1);
 1b2:	41 e0       	ldi	r20, 0x01	; 1
 1b4:	61 e0       	ldi	r22, 0x01	; 1
 1b6:	8c 2f       	mov	r24, r28
 1b8:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_WritePin>
			DIO_WritePin(port, pin2, 0);
 1bc:	40 e0       	ldi	r20, 0x00	; 0
 1be:	62 e0       	ldi	r22, 0x02	; 2
 1c0:	8c 2f       	mov	r24, r28
 1c2:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_WritePin>
			DIO_WritePin(port, pin3, 0);
 1c6:	40 e0       	ldi	r20, 0x00	; 0
 1c8:	63 e0       	ldi	r22, 0x03	; 3
 1ca:	8c 2f       	mov	r24, r28
 1cc:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_WritePin>
			break;
 1d0:	4c c1       	rjmp	.+664    	; 0x46a <__EEPROM_REGION_LENGTH__+0x6a>
		case 4:
			DIO_WritePin(port, pin0, 0);
 1d2:	40 e0       	ldi	r20, 0x00	; 0
 1d4:	60 e0       	ldi	r22, 0x00	; 0
 1d6:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_WritePin>
			DIO_WritePin(port, pin1, 0);
 1da:	40 e0       	ldi	r20, 0x00	; 0
 1dc:	61 e0       	ldi	r22, 0x01	; 1
 1de:	8c 2f       	mov	r24, r28
 1e0:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_WritePin>
			DIO_WritePin(port, pin2, 1);
 1e4:	41 e0       	ldi	r20, 0x01	; 1
 1e6:	62 e0       	ldi	r22, 0x02	; 2
 1e8:	8c 2f       	mov	r24, r28
 1ea:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_WritePin>
			DIO_WritePin(port, pin3, 0);
 1ee:	40 e0       	ldi	r20, 0x00	; 0
 1f0:	63 e0       	ldi	r22, 0x03	; 3
 1f2:	8c 2f       	mov	r24, r28
 1f4:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_WritePin>
			break;
 1f8:	38 c1       	rjmp	.+624    	; 0x46a <__EEPROM_REGION_LENGTH__+0x6a>
		case 5:
			DIO_WritePin(port, pin0, 1);
 1fa:	41 e0       	ldi	r20, 0x01	; 1
 1fc:	60 e0       	ldi	r22, 0x00	; 0
 1fe:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_WritePin>
			DIO_WritePin(port, pin1, 0);
 202:	40 e0       	ldi	r20, 0x00	; 0
 204:	61 e0       	ldi	r22, 0x01	; 1
 206:	8c 2f       	mov	r24, r28
 208:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_WritePin>
			DIO_WritePin(port, pin2, 1);
 20c:	41 e0       	ldi	r20, 0x01	; 1
 20e:	62 e0       	ldi	r22, 0x02	; 2
 210:	8c 2f       	mov	r24, r28
 212:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_WritePin>
			DIO_WritePin(port, pin3, 0);
 216:	40 e0       	ldi	r20, 0x00	; 0
 218:	63 e0       	ldi	r22, 0x03	; 3
 21a:	8c 2f       	mov	r24, r28
 21c:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_WritePin>
			break;
 220:	24 c1       	rjmp	.+584    	; 0x46a <__EEPROM_REGION_LENGTH__+0x6a>
		case 6:
			DIO_WritePin(port, pin0, 0);
 222:	40 e0       	ldi	r20, 0x00	; 0
 224:	60 e0       	ldi	r22, 0x00	; 0
 226:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_WritePin>
			DIO_WritePin(port, pin1, 1);
 22a:	41 e0       	ldi	r20, 0x01	; 1
 22c:	61 e0       	ldi	r22, 0x01	; 1
 22e:	8c 2f       	mov	r24, r28
 230:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_WritePin>
			DIO_WritePin(port, pin2, 1);
 234:	41 e0       	ldi	r20, 0x01	; 1
 236:	62 e0       	ldi	r22, 0x02	; 2
 238:	8c 2f       	mov	r24, r28
 23a:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_WritePin>
			DIO_WritePin(port, pin3, 0);
 23e:	40 e0       	ldi	r20, 0x00	; 0
 240:	63 e0       	ldi	r22, 0x03	; 3
 242:	8c 2f       	mov	r24, r28
 244:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_WritePin>
			break;
 248:	10 c1       	rjmp	.+544    	; 0x46a <__EEPROM_REGION_LENGTH__+0x6a>
		case 7:
			DIO_WritePin(port, pin0, 1);
 24a:	41 e0       	ldi	r20, 0x01	; 1
 24c:	60 e0       	ldi	r22, 0x00	; 0
 24e:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_WritePin>
			DIO_WritePin(port, pin1, 1);
 252:	41 e0       	ldi	r20, 0x01	; 1
 254:	61 e0       	ldi	r22, 0x01	; 1
 256:	8c 2f       	mov	r24, r28
 258:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_WritePin>
			DIO_WritePin(port, pin2, 1);
 25c:	41 e0       	ldi	r20, 0x01	; 1
 25e:	62 e0       	ldi	r22, 0x02	; 2
 260:	8c 2f       	mov	r24, r28
 262:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_WritePin>
			DIO_WritePin(port, pin3, 0);
 266:	40 e0       	ldi	r20, 0x00	; 0
 268:	63 e0       	ldi	r22, 0x03	; 3
 26a:	8c 2f       	mov	r24, r28
 26c:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_WritePin>
			break;
 270:	fc c0       	rjmp	.+504    	; 0x46a <__EEPROM_REGION_LENGTH__+0x6a>
		case 8:
			DIO_WritePin(port, pin0, 0);
 272:	40 e0       	ldi	r20, 0x00	; 0
 274:	60 e0       	ldi	r22, 0x00	; 0
 276:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_WritePin>
			DIO_WritePin(port, pin1, 0);
 27a:	40 e0       	ldi	r20, 0x00	; 0
 27c:	61 e0       	ldi	r22, 0x01	; 1
 27e:	8c 2f       	mov	r24, r28
 280:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_WritePin>
			DIO_WritePin(port, pin2, 0);
 284:	40 e0       	ldi	r20, 0x00	; 0
 286:	62 e0       	ldi	r22, 0x02	; 2
 288:	8c 2f       	mov	r24, r28
 28a:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_WritePin>
			DIO_WritePin(port, pin3, 1);
 28e:	41 e0       	ldi	r20, 0x01	; 1
 290:	63 e0       	ldi	r22, 0x03	; 3
 292:	8c 2f       	mov	r24, r28
 294:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_WritePin>
			break;
 298:	e8 c0       	rjmp	.+464    	; 0x46a <__EEPROM_REGION_LENGTH__+0x6a>
		case 9:
			DIO_WritePin(port, pin0, 1);
 29a:	41 e0       	ldi	r20, 0x01	; 1
 29c:	60 e0       	ldi	r22, 0x00	; 0
 29e:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_WritePin>
			DIO_WritePin(port, pin1, 0);
 2a2:	40 e0       	ldi	r20, 0x00	; 0
 2a4:	61 e0       	ldi	r22, 0x01	; 1
 2a6:	8c 2f       	mov	r24, r28
 2a8:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_WritePin>
			DIO_WritePin(port, pin2, 0);
 2ac:	40 e0       	ldi	r20, 0x00	; 0
 2ae:	62 e0       	ldi	r22, 0x02	; 2
 2b0:	8c 2f       	mov	r24, r28
 2b2:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_WritePin>
			DIO_WritePin(port, pin3, 1);
 2b6:	41 e0       	ldi	r20, 0x01	; 1
 2b8:	63 e0       	ldi	r22, 0x03	; 3
 2ba:	8c 2f       	mov	r24, r28
 2bc:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_WritePin>
			break;
 2c0:	d4 c0       	rjmp	.+424    	; 0x46a <__EEPROM_REGION_LENGTH__+0x6a>
		default:
			break;
		}
	}
	else if(half == 1)
 2c2:	61 30       	cpi	r22, 0x01	; 1
 2c4:	09 f0       	breq	.+2      	; 0x2c8 <BCD_to_SEVEN_SEG_Write+0x1b2>
 2c6:	d1 c0       	rjmp	.+418    	; 0x46a <__EEPROM_REGION_LENGTH__+0x6a>
	{
		switch (value)
 2c8:	50 e0       	ldi	r21, 0x00	; 0
 2ca:	4a 30       	cpi	r20, 0x0A	; 10
 2cc:	51 05       	cpc	r21, r1
 2ce:	08 f0       	brcs	.+2      	; 0x2d2 <BCD_to_SEVEN_SEG_Write+0x1bc>
 2d0:	cc c0       	rjmp	.+408    	; 0x46a <__EEPROM_REGION_LENGTH__+0x6a>
 2d2:	fa 01       	movw	r30, r20
 2d4:	ec 5c       	subi	r30, 0xCC	; 204
 2d6:	ff 4f       	sbci	r31, 0xFF	; 255
 2d8:	0c 94 15 04 	jmp	0x82a	; 0x82a <__tablejump2__>
			{
			case 0:
				DIO_WritePin(port, pin4, 0);
 2dc:	40 e0       	ldi	r20, 0x00	; 0
 2de:	64 e0       	ldi	r22, 0x04	; 4
 2e0:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_WritePin>
				DIO_WritePin(port, pin5, 0);
 2e4:	40 e0       	ldi	r20, 0x00	; 0
 2e6:	65 e0       	ldi	r22, 0x05	; 5
 2e8:	8c 2f       	mov	r24, r28
 2ea:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_WritePin>
				DIO_WritePin(port, pin6, 0);
 2ee:	40 e0       	ldi	r20, 0x00	; 0
 2f0:	66 e0       	ldi	r22, 0x06	; 6
 2f2:	8c 2f       	mov	r24, r28
 2f4:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_WritePin>
				DIO_WritePin(port, pin7, 0);
 2f8:	40 e0       	ldi	r20, 0x00	; 0
 2fa:	67 e0       	ldi	r22, 0x07	; 7
 2fc:	8c 2f       	mov	r24, r28
 2fe:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_WritePin>
				break;
 302:	b3 c0       	rjmp	.+358    	; 0x46a <__EEPROM_REGION_LENGTH__+0x6a>
			case 1:
				DIO_WritePin(port, pin4, 1);
 304:	41 e0       	ldi	r20, 0x01	; 1
 306:	64 e0       	ldi	r22, 0x04	; 4
 308:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_WritePin>
				DIO_WritePin(port, pin5, 0);
 30c:	40 e0       	ldi	r20, 0x00	; 0
 30e:	65 e0       	ldi	r22, 0x05	; 5
 310:	8c 2f       	mov	r24, r28
 312:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_WritePin>
				DIO_WritePin(port, pin6, 0);
 316:	40 e0       	ldi	r20, 0x00	; 0
 318:	66 e0       	ldi	r22, 0x06	; 6
 31a:	8c 2f       	mov	r24, r28
 31c:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_WritePin>
				DIO_WritePin(port, pin7, 0);
 320:	40 e0       	ldi	r20, 0x00	; 0
 322:	67 e0       	ldi	r22, 0x07	; 7
 324:	8c 2f       	mov	r24, r28
 326:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_WritePin>
				break;
 32a:	9f c0       	rjmp	.+318    	; 0x46a <__EEPROM_REGION_LENGTH__+0x6a>
			case 2:
				DIO_WritePin(port, pin4, 0);
 32c:	40 e0       	ldi	r20, 0x00	; 0
 32e:	64 e0       	ldi	r22, 0x04	; 4
 330:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_WritePin>
				DIO_WritePin(port, pin5, 1);
 334:	41 e0       	ldi	r20, 0x01	; 1
 336:	65 e0       	ldi	r22, 0x05	; 5
 338:	8c 2f       	mov	r24, r28
 33a:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_WritePin>
				DIO_WritePin(port, pin6, 0);
 33e:	40 e0       	ldi	r20, 0x00	; 0
 340:	66 e0       	ldi	r22, 0x06	; 6
 342:	8c 2f       	mov	r24, r28
 344:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_WritePin>
				DIO_WritePin(port, pin7, 0);
 348:	40 e0       	ldi	r20, 0x00	; 0
 34a:	67 e0       	ldi	r22, 0x07	; 7
 34c:	8c 2f       	mov	r24, r28
 34e:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_WritePin>
				break;
 352:	8b c0       	rjmp	.+278    	; 0x46a <__EEPROM_REGION_LENGTH__+0x6a>
			case 3:
				DIO_WritePin(port, pin4, 1);
 354:	41 e0       	ldi	r20, 0x01	; 1
 356:	64 e0       	ldi	r22, 0x04	; 4
 358:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_WritePin>
				DIO_WritePin(port, pin5, 1);
 35c:	41 e0       	ldi	r20, 0x01	; 1
 35e:	65 e0       	ldi	r22, 0x05	; 5
 360:	8c 2f       	mov	r24, r28
 362:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_WritePin>
				DIO_WritePin(port, pin6, 0);
 366:	40 e0       	ldi	r20, 0x00	; 0
 368:	66 e0       	ldi	r22, 0x06	; 6
 36a:	8c 2f       	mov	r24, r28
 36c:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_WritePin>
				DIO_WritePin(port, pin7, 0);
 370:	40 e0       	ldi	r20, 0x00	; 0
 372:	67 e0       	ldi	r22, 0x07	; 7
 374:	8c 2f       	mov	r24, r28
 376:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_WritePin>
				break;
 37a:	77 c0       	rjmp	.+238    	; 0x46a <__EEPROM_REGION_LENGTH__+0x6a>
			case 4:
				DIO_WritePin(port, pin4, 0);
 37c:	40 e0       	ldi	r20, 0x00	; 0
 37e:	64 e0       	ldi	r22, 0x04	; 4
 380:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_WritePin>
				DIO_WritePin(port, pin5, 0);
 384:	40 e0       	ldi	r20, 0x00	; 0
 386:	65 e0       	ldi	r22, 0x05	; 5
 388:	8c 2f       	mov	r24, r28
 38a:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_WritePin>
				DIO_WritePin(port, pin6, 1);
 38e:	41 e0       	ldi	r20, 0x01	; 1
 390:	66 e0       	ldi	r22, 0x06	; 6
 392:	8c 2f       	mov	r24, r28
 394:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_WritePin>
				DIO_WritePin(port, pin7, 0);
 398:	40 e0       	ldi	r20, 0x00	; 0
 39a:	67 e0       	ldi	r22, 0x07	; 7
 39c:	8c 2f       	mov	r24, r28
 39e:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_WritePin>
				break;
 3a2:	63 c0       	rjmp	.+198    	; 0x46a <__EEPROM_REGION_LENGTH__+0x6a>
			case 5:
				DIO_WritePin(port, pin4, 1);
 3a4:	41 e0       	ldi	r20, 0x01	; 1
 3a6:	64 e0       	ldi	r22, 0x04	; 4
 3a8:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_WritePin>
				DIO_WritePin(port, pin5, 0);
 3ac:	40 e0       	ldi	r20, 0x00	; 0
 3ae:	65 e0       	ldi	r22, 0x05	; 5
 3b0:	8c 2f       	mov	r24, r28
 3b2:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_WritePin>
				DIO_WritePin(port, pin6, 1);
 3b6:	41 e0       	ldi	r20, 0x01	; 1
 3b8:	66 e0       	ldi	r22, 0x06	; 6
 3ba:	8c 2f       	mov	r24, r28
 3bc:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_WritePin>
				DIO_WritePin(port, pin7, 0);
 3c0:	40 e0       	ldi	r20, 0x00	; 0
 3c2:	67 e0       	ldi	r22, 0x07	; 7
 3c4:	8c 2f       	mov	r24, r28
 3c6:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_WritePin>
				break;
 3ca:	4f c0       	rjmp	.+158    	; 0x46a <__EEPROM_REGION_LENGTH__+0x6a>
			case 6:
				DIO_WritePin(port, pin4, 0);
 3cc:	40 e0       	ldi	r20, 0x00	; 0
 3ce:	64 e0       	ldi	r22, 0x04	; 4
 3d0:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_WritePin>
				DIO_WritePin(port, pin5, 1);
 3d4:	41 e0       	ldi	r20, 0x01	; 1
 3d6:	65 e0       	ldi	r22, 0x05	; 5
 3d8:	8c 2f       	mov	r24, r28
 3da:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_WritePin>
				DIO_WritePin(port, pin6, 1);
 3de:	41 e0       	ldi	r20, 0x01	; 1
 3e0:	66 e0       	ldi	r22, 0x06	; 6
 3e2:	8c 2f       	mov	r24, r28
 3e4:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_WritePin>
				DIO_WritePin(port, pin7, 0);
 3e8:	40 e0       	ldi	r20, 0x00	; 0
 3ea:	67 e0       	ldi	r22, 0x07	; 7
 3ec:	8c 2f       	mov	r24, r28
 3ee:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_WritePin>
				break;
 3f2:	3b c0       	rjmp	.+118    	; 0x46a <__EEPROM_REGION_LENGTH__+0x6a>
			case 7:
				DIO_WritePin(port, pin4, 1);
 3f4:	41 e0       	ldi	r20, 0x01	; 1
 3f6:	64 e0       	ldi	r22, 0x04	; 4
 3f8:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_WritePin>
				DIO_WritePin(port, pin5, 1);
 3fc:	41 e0       	ldi	r20, 0x01	; 1
 3fe:	65 e0       	ldi	r22, 0x05	; 5
 400:	8c 2f       	mov	r24, r28
 402:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_WritePin>
				DIO_WritePin(port, pin6, 1);
 406:	41 e0       	ldi	r20, 0x01	; 1
 408:	66 e0       	ldi	r22, 0x06	; 6
 40a:	8c 2f       	mov	r24, r28
 40c:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_WritePin>
				DIO_WritePin(port, pin7, 0);
 410:	40 e0       	ldi	r20, 0x00	; 0
 412:	67 e0       	ldi	r22, 0x07	; 7
 414:	8c 2f       	mov	r24, r28
 416:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_WritePin>
				break;
 41a:	27 c0       	rjmp	.+78     	; 0x46a <__EEPROM_REGION_LENGTH__+0x6a>
			case 8:
				DIO_WritePin(port, pin4, 0);
 41c:	40 e0       	ldi	r20, 0x00	; 0
 41e:	64 e0       	ldi	r22, 0x04	; 4
 420:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_WritePin>
				DIO_WritePin(port, pin5, 0);
 424:	40 e0       	ldi	r20, 0x00	; 0
 426:	65 e0       	ldi	r22, 0x05	; 5
 428:	8c 2f       	mov	r24, r28
 42a:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_WritePin>
				DIO_WritePin(port, pin6, 0);
 42e:	40 e0       	ldi	r20, 0x00	; 0
 430:	66 e0       	ldi	r22, 0x06	; 6
 432:	8c 2f       	mov	r24, r28
 434:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_WritePin>
				DIO_WritePin(port, pin7, 1);
 438:	41 e0       	ldi	r20, 0x01	; 1
 43a:	67 e0       	ldi	r22, 0x07	; 7
 43c:	8c 2f       	mov	r24, r28
 43e:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_WritePin>
				break;
 442:	13 c0       	rjmp	.+38     	; 0x46a <__EEPROM_REGION_LENGTH__+0x6a>
			case 9:
				DIO_WritePin(port, pin4, 1);
 444:	41 e0       	ldi	r20, 0x01	; 1
 446:	64 e0       	ldi	r22, 0x04	; 4
 448:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_WritePin>
				DIO_WritePin(port, pin5, 0);
 44c:	40 e0       	ldi	r20, 0x00	; 0
 44e:	65 e0       	ldi	r22, 0x05	; 5
 450:	8c 2f       	mov	r24, r28
 452:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_WritePin>
				DIO_WritePin(port, pin6, 0);
 456:	40 e0       	ldi	r20, 0x00	; 0
 458:	66 e0       	ldi	r22, 0x06	; 6
 45a:	8c 2f       	mov	r24, r28
 45c:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_WritePin>
				DIO_WritePin(port, pin7, 1);
 460:	41 e0       	ldi	r20, 0x01	; 1
 462:	67 e0       	ldi	r22, 0x07	; 7
 464:	8c 2f       	mov	r24, r28
 466:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_WritePin>
				break;
			default:
				break;
			}
	}
 46a:	cf 91       	pop	r28
 46c:	08 95       	ret

0000046e <BUTTON_Init>:

#include "DIO_interface.h"
#include "BUTTON_interface.h"
void BUTTON_Init(unsigned char port,unsigned char pin)
{
	DIO_SetPinDir(port,pin,0);
 46e:	40 e0       	ldi	r20, 0x00	; 0
 470:	0e 94 3e 02 	call	0x47c	; 0x47c <DIO_SetPinDir>
 474:	08 95       	ret

00000476 <BUTTON_Read>:
}
unsigned char BUTTON_Read(unsigned char port,unsigned char pin)
{
	unsigned char x;
	x= DIO_ReadPin(port,pin);
 476:	0e 94 1e 03 	call	0x63c	; 0x63c <DIO_ReadPin>
	return x;
}
 47a:	08 95       	ret

0000047c <DIO_SetPinDir>:
		case portc:
			PORTC^=(1<<pin);
		break;
		//portD
		case portd:
			PORTD^=(1<<pin);
 47c:	82 34       	cpi	r24, 0x42	; 66
 47e:	19 f1       	breq	.+70     	; 0x4c6 <DIO_SetPinDir+0x4a>
 480:	18 f4       	brcc	.+6      	; 0x488 <DIO_SetPinDir+0xc>
 482:	81 34       	cpi	r24, 0x41	; 65
 484:	39 f0       	breq	.+14     	; 0x494 <DIO_SetPinDir+0x18>
 486:	08 95       	ret
 488:	83 34       	cpi	r24, 0x43	; 67
 48a:	b1 f1       	breq	.+108    	; 0x4f8 <DIO_SetPinDir+0x7c>
 48c:	84 34       	cpi	r24, 0x44	; 68
 48e:	09 f4       	brne	.+2      	; 0x492 <DIO_SetPinDir+0x16>
 490:	4c c0       	rjmp	.+152    	; 0x52a <DIO_SetPinDir+0xae>
 492:	08 95       	ret
 494:	41 30       	cpi	r20, 0x01	; 1
 496:	59 f4       	brne	.+22     	; 0x4ae <DIO_SetPinDir+0x32>
 498:	2a b3       	in	r18, 0x1a	; 26
 49a:	81 e0       	ldi	r24, 0x01	; 1
 49c:	90 e0       	ldi	r25, 0x00	; 0
 49e:	02 c0       	rjmp	.+4      	; 0x4a4 <DIO_SetPinDir+0x28>
 4a0:	88 0f       	add	r24, r24
 4a2:	99 1f       	adc	r25, r25
 4a4:	6a 95       	dec	r22
 4a6:	e2 f7       	brpl	.-8      	; 0x4a0 <DIO_SetPinDir+0x24>
 4a8:	82 2b       	or	r24, r18
 4aa:	8a bb       	out	0x1a, r24	; 26
 4ac:	08 95       	ret
 4ae:	2a b3       	in	r18, 0x1a	; 26
 4b0:	81 e0       	ldi	r24, 0x01	; 1
 4b2:	90 e0       	ldi	r25, 0x00	; 0
 4b4:	02 c0       	rjmp	.+4      	; 0x4ba <DIO_SetPinDir+0x3e>
 4b6:	88 0f       	add	r24, r24
 4b8:	99 1f       	adc	r25, r25
 4ba:	6a 95       	dec	r22
 4bc:	e2 f7       	brpl	.-8      	; 0x4b6 <DIO_SetPinDir+0x3a>
 4be:	80 95       	com	r24
 4c0:	82 23       	and	r24, r18
 4c2:	8a bb       	out	0x1a, r24	; 26
 4c4:	08 95       	ret
 4c6:	41 30       	cpi	r20, 0x01	; 1
 4c8:	59 f4       	brne	.+22     	; 0x4e0 <DIO_SetPinDir+0x64>
 4ca:	27 b3       	in	r18, 0x17	; 23
 4cc:	81 e0       	ldi	r24, 0x01	; 1
 4ce:	90 e0       	ldi	r25, 0x00	; 0
 4d0:	02 c0       	rjmp	.+4      	; 0x4d6 <DIO_SetPinDir+0x5a>
 4d2:	88 0f       	add	r24, r24
 4d4:	99 1f       	adc	r25, r25
 4d6:	6a 95       	dec	r22
 4d8:	e2 f7       	brpl	.-8      	; 0x4d2 <DIO_SetPinDir+0x56>
 4da:	82 2b       	or	r24, r18
 4dc:	87 bb       	out	0x17, r24	; 23
 4de:	08 95       	ret
 4e0:	27 b3       	in	r18, 0x17	; 23
 4e2:	81 e0       	ldi	r24, 0x01	; 1
 4e4:	90 e0       	ldi	r25, 0x00	; 0
 4e6:	02 c0       	rjmp	.+4      	; 0x4ec <DIO_SetPinDir+0x70>
 4e8:	88 0f       	add	r24, r24
 4ea:	99 1f       	adc	r25, r25
 4ec:	6a 95       	dec	r22
 4ee:	e2 f7       	brpl	.-8      	; 0x4e8 <DIO_SetPinDir+0x6c>
 4f0:	80 95       	com	r24
 4f2:	82 23       	and	r24, r18
 4f4:	87 bb       	out	0x17, r24	; 23
 4f6:	08 95       	ret
 4f8:	41 30       	cpi	r20, 0x01	; 1
 4fa:	59 f4       	brne	.+22     	; 0x512 <DIO_SetPinDir+0x96>
 4fc:	24 b3       	in	r18, 0x14	; 20
 4fe:	81 e0       	ldi	r24, 0x01	; 1
 500:	90 e0       	ldi	r25, 0x00	; 0
 502:	02 c0       	rjmp	.+4      	; 0x508 <DIO_SetPinDir+0x8c>
 504:	88 0f       	add	r24, r24
 506:	99 1f       	adc	r25, r25
 508:	6a 95       	dec	r22
 50a:	e2 f7       	brpl	.-8      	; 0x504 <DIO_SetPinDir+0x88>
 50c:	82 2b       	or	r24, r18
 50e:	84 bb       	out	0x14, r24	; 20
 510:	08 95       	ret
 512:	24 b3       	in	r18, 0x14	; 20
 514:	81 e0       	ldi	r24, 0x01	; 1
 516:	90 e0       	ldi	r25, 0x00	; 0
 518:	02 c0       	rjmp	.+4      	; 0x51e <DIO_SetPinDir+0xa2>
 51a:	88 0f       	add	r24, r24
 51c:	99 1f       	adc	r25, r25
 51e:	6a 95       	dec	r22
 520:	e2 f7       	brpl	.-8      	; 0x51a <DIO_SetPinDir+0x9e>
 522:	80 95       	com	r24
 524:	82 23       	and	r24, r18
 526:	84 bb       	out	0x14, r24	; 20
 528:	08 95       	ret
 52a:	41 30       	cpi	r20, 0x01	; 1
 52c:	59 f4       	brne	.+22     	; 0x544 <DIO_SetPinDir+0xc8>
 52e:	21 b3       	in	r18, 0x11	; 17
 530:	81 e0       	ldi	r24, 0x01	; 1
 532:	90 e0       	ldi	r25, 0x00	; 0
 534:	02 c0       	rjmp	.+4      	; 0x53a <DIO_SetPinDir+0xbe>
 536:	88 0f       	add	r24, r24
 538:	99 1f       	adc	r25, r25
 53a:	6a 95       	dec	r22
 53c:	e2 f7       	brpl	.-8      	; 0x536 <DIO_SetPinDir+0xba>
 53e:	82 2b       	or	r24, r18
 540:	81 bb       	out	0x11, r24	; 17
 542:	08 95       	ret
 544:	21 b3       	in	r18, 0x11	; 17
 546:	81 e0       	ldi	r24, 0x01	; 1
 548:	90 e0       	ldi	r25, 0x00	; 0
 54a:	02 c0       	rjmp	.+4      	; 0x550 <DIO_SetPinDir+0xd4>
 54c:	88 0f       	add	r24, r24
 54e:	99 1f       	adc	r25, r25
 550:	6a 95       	dec	r22
 552:	e2 f7       	brpl	.-8      	; 0x54c <DIO_SetPinDir+0xd0>
 554:	80 95       	com	r24
 556:	82 23       	and	r24, r18
 558:	81 bb       	out	0x11, r24	; 17
 55a:	08 95       	ret

0000055c <DIO_WritePin>:
 55c:	82 34       	cpi	r24, 0x42	; 66
 55e:	19 f1       	breq	.+70     	; 0x5a6 <DIO_WritePin+0x4a>
 560:	18 f4       	brcc	.+6      	; 0x568 <DIO_WritePin+0xc>
 562:	81 34       	cpi	r24, 0x41	; 65
 564:	39 f0       	breq	.+14     	; 0x574 <DIO_WritePin+0x18>
 566:	08 95       	ret
 568:	83 34       	cpi	r24, 0x43	; 67
 56a:	b1 f1       	breq	.+108    	; 0x5d8 <DIO_WritePin+0x7c>
 56c:	84 34       	cpi	r24, 0x44	; 68
 56e:	09 f4       	brne	.+2      	; 0x572 <DIO_WritePin+0x16>
 570:	4c c0       	rjmp	.+152    	; 0x60a <DIO_WritePin+0xae>
 572:	08 95       	ret
 574:	41 30       	cpi	r20, 0x01	; 1
 576:	59 f4       	brne	.+22     	; 0x58e <DIO_WritePin+0x32>
 578:	2b b3       	in	r18, 0x1b	; 27
 57a:	81 e0       	ldi	r24, 0x01	; 1
 57c:	90 e0       	ldi	r25, 0x00	; 0
 57e:	02 c0       	rjmp	.+4      	; 0x584 <DIO_WritePin+0x28>
 580:	88 0f       	add	r24, r24
 582:	99 1f       	adc	r25, r25
 584:	6a 95       	dec	r22
 586:	e2 f7       	brpl	.-8      	; 0x580 <DIO_WritePin+0x24>
 588:	82 2b       	or	r24, r18
 58a:	8b bb       	out	0x1b, r24	; 27
 58c:	08 95       	ret
 58e:	2b b3       	in	r18, 0x1b	; 27
 590:	81 e0       	ldi	r24, 0x01	; 1
 592:	90 e0       	ldi	r25, 0x00	; 0
 594:	02 c0       	rjmp	.+4      	; 0x59a <DIO_WritePin+0x3e>
 596:	88 0f       	add	r24, r24
 598:	99 1f       	adc	r25, r25
 59a:	6a 95       	dec	r22
 59c:	e2 f7       	brpl	.-8      	; 0x596 <DIO_WritePin+0x3a>
 59e:	80 95       	com	r24
 5a0:	82 23       	and	r24, r18
 5a2:	8b bb       	out	0x1b, r24	; 27
 5a4:	08 95       	ret
 5a6:	41 30       	cpi	r20, 0x01	; 1
 5a8:	59 f4       	brne	.+22     	; 0x5c0 <DIO_WritePin+0x64>
 5aa:	28 b3       	in	r18, 0x18	; 24
 5ac:	81 e0       	ldi	r24, 0x01	; 1
 5ae:	90 e0       	ldi	r25, 0x00	; 0
 5b0:	02 c0       	rjmp	.+4      	; 0x5b6 <DIO_WritePin+0x5a>
 5b2:	88 0f       	add	r24, r24
 5b4:	99 1f       	adc	r25, r25
 5b6:	6a 95       	dec	r22
 5b8:	e2 f7       	brpl	.-8      	; 0x5b2 <DIO_WritePin+0x56>
 5ba:	82 2b       	or	r24, r18
 5bc:	88 bb       	out	0x18, r24	; 24
 5be:	08 95       	ret
 5c0:	28 b3       	in	r18, 0x18	; 24
 5c2:	81 e0       	ldi	r24, 0x01	; 1
 5c4:	90 e0       	ldi	r25, 0x00	; 0
 5c6:	02 c0       	rjmp	.+4      	; 0x5cc <DIO_WritePin+0x70>
 5c8:	88 0f       	add	r24, r24
 5ca:	99 1f       	adc	r25, r25
 5cc:	6a 95       	dec	r22
 5ce:	e2 f7       	brpl	.-8      	; 0x5c8 <DIO_WritePin+0x6c>
 5d0:	80 95       	com	r24
 5d2:	82 23       	and	r24, r18
 5d4:	88 bb       	out	0x18, r24	; 24
 5d6:	08 95       	ret
 5d8:	41 30       	cpi	r20, 0x01	; 1
 5da:	59 f4       	brne	.+22     	; 0x5f2 <DIO_WritePin+0x96>
 5dc:	25 b3       	in	r18, 0x15	; 21
 5de:	81 e0       	ldi	r24, 0x01	; 1
 5e0:	90 e0       	ldi	r25, 0x00	; 0
 5e2:	02 c0       	rjmp	.+4      	; 0x5e8 <DIO_WritePin+0x8c>
 5e4:	88 0f       	add	r24, r24
 5e6:	99 1f       	adc	r25, r25
 5e8:	6a 95       	dec	r22
 5ea:	e2 f7       	brpl	.-8      	; 0x5e4 <DIO_WritePin+0x88>
 5ec:	82 2b       	or	r24, r18
 5ee:	85 bb       	out	0x15, r24	; 21
 5f0:	08 95       	ret
 5f2:	25 b3       	in	r18, 0x15	; 21
 5f4:	81 e0       	ldi	r24, 0x01	; 1
 5f6:	90 e0       	ldi	r25, 0x00	; 0
 5f8:	02 c0       	rjmp	.+4      	; 0x5fe <DIO_WritePin+0xa2>
 5fa:	88 0f       	add	r24, r24
 5fc:	99 1f       	adc	r25, r25
 5fe:	6a 95       	dec	r22
 600:	e2 f7       	brpl	.-8      	; 0x5fa <DIO_WritePin+0x9e>
 602:	80 95       	com	r24
 604:	82 23       	and	r24, r18
 606:	85 bb       	out	0x15, r24	; 21
 608:	08 95       	ret
 60a:	41 30       	cpi	r20, 0x01	; 1
 60c:	59 f4       	brne	.+22     	; 0x624 <DIO_WritePin+0xc8>
 60e:	22 b3       	in	r18, 0x12	; 18
 610:	81 e0       	ldi	r24, 0x01	; 1
 612:	90 e0       	ldi	r25, 0x00	; 0
 614:	02 c0       	rjmp	.+4      	; 0x61a <DIO_WritePin+0xbe>
 616:	88 0f       	add	r24, r24
 618:	99 1f       	adc	r25, r25
 61a:	6a 95       	dec	r22
 61c:	e2 f7       	brpl	.-8      	; 0x616 <DIO_WritePin+0xba>
 61e:	82 2b       	or	r24, r18
 620:	82 bb       	out	0x12, r24	; 18
 622:	08 95       	ret
 624:	22 b3       	in	r18, 0x12	; 18
 626:	81 e0       	ldi	r24, 0x01	; 1
 628:	90 e0       	ldi	r25, 0x00	; 0
 62a:	02 c0       	rjmp	.+4      	; 0x630 <DIO_WritePin+0xd4>
 62c:	88 0f       	add	r24, r24
 62e:	99 1f       	adc	r25, r25
 630:	6a 95       	dec	r22
 632:	e2 f7       	brpl	.-8      	; 0x62c <DIO_WritePin+0xd0>
 634:	80 95       	com	r24
 636:	82 23       	and	r24, r18
 638:	82 bb       	out	0x12, r24	; 18
 63a:	08 95       	ret

0000063c <DIO_ReadPin>:
}

uint8_t DIO_ReadPin (uint8_t port,uint8_t pin)
{
uint8_t value=0;
	switch(port)
 63c:	82 34       	cpi	r24, 0x42	; 66
 63e:	e9 f0       	breq	.+58     	; 0x67a <DIO_ReadPin+0x3e>
 640:	18 f4       	brcc	.+6      	; 0x648 <DIO_ReadPin+0xc>
 642:	81 34       	cpi	r24, 0x41	; 65
 644:	31 f0       	breq	.+12     	; 0x652 <DIO_ReadPin+0x16>
 646:	55 c0       	rjmp	.+170    	; 0x6f2 <DIO_ReadPin+0xb6>
 648:	83 34       	cpi	r24, 0x43	; 67
 64a:	59 f1       	breq	.+86     	; 0x6a2 <DIO_ReadPin+0x66>
 64c:	84 34       	cpi	r24, 0x44	; 68
 64e:	e9 f1       	breq	.+122    	; 0x6ca <DIO_ReadPin+0x8e>
 650:	50 c0       	rjmp	.+160    	; 0x6f2 <DIO_ReadPin+0xb6>
	{
		//portA
		case porta:
		value=((PINA&(1<<pin))>>pin);
 652:	49 b3       	in	r20, 0x19	; 25
 654:	81 e0       	ldi	r24, 0x01	; 1
 656:	90 e0       	ldi	r25, 0x00	; 0
 658:	9c 01       	movw	r18, r24
 65a:	06 2e       	mov	r0, r22
 65c:	02 c0       	rjmp	.+4      	; 0x662 <DIO_ReadPin+0x26>
 65e:	22 0f       	add	r18, r18
 660:	33 1f       	adc	r19, r19
 662:	0a 94       	dec	r0
 664:	e2 f7       	brpl	.-8      	; 0x65e <DIO_ReadPin+0x22>
 666:	84 2f       	mov	r24, r20
 668:	90 e0       	ldi	r25, 0x00	; 0
 66a:	82 23       	and	r24, r18
 66c:	93 23       	and	r25, r19
 66e:	02 c0       	rjmp	.+4      	; 0x674 <DIO_ReadPin+0x38>
 670:	95 95       	asr	r25
 672:	87 95       	ror	r24
 674:	6a 95       	dec	r22
 676:	e2 f7       	brpl	.-8      	; 0x670 <DIO_ReadPin+0x34>
		break;
 678:	08 95       	ret
		//portB
		case portb:
		value=((PINB&(1<<pin))>>pin);
 67a:	46 b3       	in	r20, 0x16	; 22
 67c:	81 e0       	ldi	r24, 0x01	; 1
 67e:	90 e0       	ldi	r25, 0x00	; 0
 680:	9c 01       	movw	r18, r24
 682:	06 2e       	mov	r0, r22
 684:	02 c0       	rjmp	.+4      	; 0x68a <DIO_ReadPin+0x4e>
 686:	22 0f       	add	r18, r18
 688:	33 1f       	adc	r19, r19
 68a:	0a 94       	dec	r0
 68c:	e2 f7       	brpl	.-8      	; 0x686 <DIO_ReadPin+0x4a>
 68e:	84 2f       	mov	r24, r20
 690:	90 e0       	ldi	r25, 0x00	; 0
 692:	82 23       	and	r24, r18
 694:	93 23       	and	r25, r19
 696:	02 c0       	rjmp	.+4      	; 0x69c <DIO_ReadPin+0x60>
 698:	95 95       	asr	r25
 69a:	87 95       	ror	r24
 69c:	6a 95       	dec	r22
 69e:	e2 f7       	brpl	.-8      	; 0x698 <DIO_ReadPin+0x5c>
		break;
 6a0:	08 95       	ret
		//portC
		case portc:
		value=((PINC&(1<<pin))>>pin);
 6a2:	43 b3       	in	r20, 0x13	; 19
 6a4:	81 e0       	ldi	r24, 0x01	; 1
 6a6:	90 e0       	ldi	r25, 0x00	; 0
 6a8:	9c 01       	movw	r18, r24
 6aa:	06 2e       	mov	r0, r22
 6ac:	02 c0       	rjmp	.+4      	; 0x6b2 <DIO_ReadPin+0x76>
 6ae:	22 0f       	add	r18, r18
 6b0:	33 1f       	adc	r19, r19
 6b2:	0a 94       	dec	r0
 6b4:	e2 f7       	brpl	.-8      	; 0x6ae <DIO_ReadPin+0x72>
 6b6:	84 2f       	mov	r24, r20
 6b8:	90 e0       	ldi	r25, 0x00	; 0
 6ba:	82 23       	and	r24, r18
 6bc:	93 23       	and	r25, r19
 6be:	02 c0       	rjmp	.+4      	; 0x6c4 <DIO_ReadPin+0x88>
 6c0:	95 95       	asr	r25
 6c2:	87 95       	ror	r24
 6c4:	6a 95       	dec	r22
 6c6:	e2 f7       	brpl	.-8      	; 0x6c0 <DIO_ReadPin+0x84>
		break;
 6c8:	08 95       	ret
		//portD
		case portd:
		value=((PIND&(1<<pin))>>pin);
 6ca:	40 b3       	in	r20, 0x10	; 16
 6cc:	81 e0       	ldi	r24, 0x01	; 1
 6ce:	90 e0       	ldi	r25, 0x00	; 0
 6d0:	9c 01       	movw	r18, r24
 6d2:	06 2e       	mov	r0, r22
 6d4:	02 c0       	rjmp	.+4      	; 0x6da <DIO_ReadPin+0x9e>
 6d6:	22 0f       	add	r18, r18
 6d8:	33 1f       	adc	r19, r19
 6da:	0a 94       	dec	r0
 6dc:	e2 f7       	brpl	.-8      	; 0x6d6 <DIO_ReadPin+0x9a>
 6de:	84 2f       	mov	r24, r20
 6e0:	90 e0       	ldi	r25, 0x00	; 0
 6e2:	82 23       	and	r24, r18
 6e4:	93 23       	and	r25, r19
 6e6:	02 c0       	rjmp	.+4      	; 0x6ec <DIO_ReadPin+0xb0>
 6e8:	95 95       	asr	r25
 6ea:	87 95       	ror	r24
 6ec:	6a 95       	dec	r22
 6ee:	e2 f7       	brpl	.-8      	; 0x6e8 <DIO_ReadPin+0xac>
		break;
 6f0:	08 95       	ret
	}
}

uint8_t DIO_ReadPin (uint8_t port,uint8_t pin)
{
uint8_t value=0;
 6f2:	80 e0       	ldi	r24, 0x00	; 0
		case portd:
		value=((PIND&(1<<pin))>>pin);
		break;
	}
return value;
}
 6f4:	08 95       	ret

000006f6 <LED_Init>:
/**********************************************************************************************/
#include "DIO_interface.h"
#include "Definitions.h"
void LED_Init(uint8_t port,uint8_t pin)
{
	DIO_SetPinDir(port,pin,OUTPUT);
 6f6:	41 e0       	ldi	r20, 0x01	; 1
 6f8:	0e 94 3e 02 	call	0x47c	; 0x47c <DIO_SetPinDir>
 6fc:	08 95       	ret

000006fe <LED_On>:
}
void LED_On(uint8_t port,uint8_t pin)
{
	DIO_WritePin(port,pin,1);
 6fe:	41 e0       	ldi	r20, 0x01	; 1
 700:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_WritePin>
 704:	08 95       	ret

00000706 <LED_Off>:
}
void LED_Off(uint8_t port,uint8_t pin)
{
	DIO_WritePin(port,pin,0);
 706:	40 e0       	ldi	r20, 0x00	; 0
 708:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_WritePin>
 70c:	08 95       	ret

0000070e <main>:

unsigned char counter = 0;

int main(void)
{
	BCD_to_SEVEN_SEG_Init(portc, 0);
 70e:	60 e0       	ldi	r22, 0x00	; 0
 710:	83 e4       	ldi	r24, 0x43	; 67
 712:	0e 94 5d 00 	call	0xba	; 0xba <BCD_to_SEVEN_SEG_Init>
	BCD_to_SEVEN_SEG_Init(portc, 1);
 716:	61 e0       	ldi	r22, 0x01	; 1
 718:	83 e4       	ldi	r24, 0x43	; 67
 71a:	0e 94 5d 00 	call	0xba	; 0xba <BCD_to_SEVEN_SEG_Init>
	
	LED_Init(portb, pin6); // Green led
 71e:	66 e0       	ldi	r22, 0x06	; 6
 720:	82 e4       	ldi	r24, 0x42	; 66
 722:	0e 94 7b 03 	call	0x6f6	; 0x6f6 <LED_Init>
	LED_Init(portb, pin7); // Red led
 726:	67 e0       	ldi	r22, 0x07	; 7
 728:	82 e4       	ldi	r24, 0x42	; 66
 72a:	0e 94 7b 03 	call	0x6f6	; 0x6f6 <LED_Init>
	
	BUTTON_Init(porta, pin0);
 72e:	60 e0       	ldi	r22, 0x00	; 0
 730:	81 e4       	ldi	r24, 0x41	; 65
 732:	0e 94 37 02 	call	0x46e	; 0x46e <BUTTON_Init>
	BUTTON_Init(porta, pin6);
 736:	66 e0       	ldi	r22, 0x06	; 6
 738:	81 e4       	ldi	r24, 0x41	; 65
 73a:	0e 94 37 02 	call	0x46e	; 0x46e <BUTTON_Init>
	BUTTON_Init(portb, pin3);
 73e:	63 e0       	ldi	r22, 0x03	; 3
 740:	82 e4       	ldi	r24, 0x42	; 66
 742:	0e 94 37 02 	call	0x46e	; 0x46e <BUTTON_Init>
	
	while(1)
	{	
		if(BUTTON_Read(porta, pin0) == 1)
 746:	60 e0       	ldi	r22, 0x00	; 0
 748:	81 e4       	ldi	r24, 0x41	; 65
 74a:	0e 94 3b 02 	call	0x476	; 0x476 <BUTTON_Read>
 74e:	81 30       	cpi	r24, 0x01	; 1
 750:	71 f4       	brne	.+28     	; 0x76e <main+0x60>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 752:	2f ef       	ldi	r18, 0xFF	; 255
 754:	84 e3       	ldi	r24, 0x34	; 52
 756:	9c e0       	ldi	r25, 0x0C	; 12
 758:	21 50       	subi	r18, 0x01	; 1
 75a:	80 40       	sbci	r24, 0x00	; 0
 75c:	90 40       	sbci	r25, 0x00	; 0
 75e:	e1 f7       	brne	.-8      	; 0x758 <main+0x4a>
 760:	00 c0       	rjmp	.+0      	; 0x762 <main+0x54>
 762:	00 00       	nop
		{
			_delay_ms(500);
			counter ++;
 764:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 768:	8f 5f       	subi	r24, 0xFF	; 255
 76a:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
		}
		if(BUTTON_Read(porta, pin6) == 1)
 76e:	66 e0       	ldi	r22, 0x06	; 6
 770:	81 e4       	ldi	r24, 0x41	; 65
 772:	0e 94 3b 02 	call	0x476	; 0x476 <BUTTON_Read>
 776:	81 30       	cpi	r24, 0x01	; 1
 778:	71 f4       	brne	.+28     	; 0x796 <main+0x88>
 77a:	2f ef       	ldi	r18, 0xFF	; 255
 77c:	84 e3       	ldi	r24, 0x34	; 52
 77e:	9c e0       	ldi	r25, 0x0C	; 12
 780:	21 50       	subi	r18, 0x01	; 1
 782:	80 40       	sbci	r24, 0x00	; 0
 784:	90 40       	sbci	r25, 0x00	; 0
 786:	e1 f7       	brne	.-8      	; 0x780 <main+0x72>
 788:	00 c0       	rjmp	.+0      	; 0x78a <main+0x7c>
 78a:	00 00       	nop
		{
			_delay_ms(500);
			counter --;	
 78c:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 790:	81 50       	subi	r24, 0x01	; 1
 792:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
		}
		if(BUTTON_Read(portb, pin3) == 1)
 796:	63 e0       	ldi	r22, 0x03	; 3
 798:	82 e4       	ldi	r24, 0x42	; 66
 79a:	0e 94 3b 02 	call	0x476	; 0x476 <BUTTON_Read>
 79e:	81 30       	cpi	r24, 0x01	; 1
 7a0:	59 f4       	brne	.+22     	; 0x7b8 <main+0xaa>
 7a2:	2f ef       	ldi	r18, 0xFF	; 255
 7a4:	84 e3       	ldi	r24, 0x34	; 52
 7a6:	9c e0       	ldi	r25, 0x0C	; 12
 7a8:	21 50       	subi	r18, 0x01	; 1
 7aa:	80 40       	sbci	r24, 0x00	; 0
 7ac:	90 40       	sbci	r25, 0x00	; 0
 7ae:	e1 f7       	brne	.-8      	; 0x7a8 <main+0x9a>
 7b0:	00 c0       	rjmp	.+0      	; 0x7b2 <main+0xa4>
 7b2:	00 00       	nop
		{
			_delay_ms(500);
			counter = 0;
 7b4:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
		}
		if(counter % 2 == 0)
 7b8:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 7bc:	98 2f       	mov	r25, r24
 7be:	91 70       	andi	r25, 0x01	; 1
 7c0:	80 fd       	sbrc	r24, 0
 7c2:	09 c0       	rjmp	.+18     	; 0x7d6 <main+0xc8>
		{
			LED_On(portb, pin6);
 7c4:	66 e0       	ldi	r22, 0x06	; 6
 7c6:	82 e4       	ldi	r24, 0x42	; 66
 7c8:	0e 94 7f 03 	call	0x6fe	; 0x6fe <LED_On>
			LED_Off(portb, pin7);
 7cc:	67 e0       	ldi	r22, 0x07	; 7
 7ce:	82 e4       	ldi	r24, 0x42	; 66
 7d0:	0e 94 83 03 	call	0x706	; 0x706 <LED_Off>
 7d4:	0a c0       	rjmp	.+20     	; 0x7ea <main+0xdc>
		}
		else if(counter % 2 != 0)
 7d6:	99 23       	and	r25, r25
 7d8:	41 f0       	breq	.+16     	; 0x7ea <main+0xdc>
		{
			LED_Off(portb, pin6);
 7da:	66 e0       	ldi	r22, 0x06	; 6
 7dc:	82 e4       	ldi	r24, 0x42	; 66
 7de:	0e 94 83 03 	call	0x706	; 0x706 <LED_Off>
			LED_On(portb, pin7);
 7e2:	67 e0       	ldi	r22, 0x07	; 7
 7e4:	82 e4       	ldi	r24, 0x42	; 66
 7e6:	0e 94 7f 03 	call	0x6fe	; 0x6fe <LED_On>
		}
		BCD_to_SEVEN_SEG_Write(portc, 0, counter%10);
 7ea:	40 91 60 00 	lds	r20, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 7ee:	cd ec       	ldi	r28, 0xCD	; 205
 7f0:	4c 9f       	mul	r20, r28
 7f2:	81 2d       	mov	r24, r1
 7f4:	11 24       	eor	r1, r1
 7f6:	86 95       	lsr	r24
 7f8:	86 95       	lsr	r24
 7fa:	86 95       	lsr	r24
 7fc:	88 0f       	add	r24, r24
 7fe:	98 2f       	mov	r25, r24
 800:	99 0f       	add	r25, r25
 802:	99 0f       	add	r25, r25
 804:	89 0f       	add	r24, r25
 806:	48 1b       	sub	r20, r24
 808:	60 e0       	ldi	r22, 0x00	; 0
 80a:	83 e4       	ldi	r24, 0x43	; 67
 80c:	0e 94 8b 00 	call	0x116	; 0x116 <BCD_to_SEVEN_SEG_Write>
		BCD_to_SEVEN_SEG_Write(portc, 1, counter/10);
 810:	40 91 60 00 	lds	r20, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 814:	4c 9f       	mul	r20, r28
 816:	41 2d       	mov	r20, r1
 818:	11 24       	eor	r1, r1
 81a:	46 95       	lsr	r20
 81c:	46 95       	lsr	r20
 81e:	46 95       	lsr	r20
 820:	61 e0       	ldi	r22, 0x01	; 1
 822:	83 e4       	ldi	r24, 0x43	; 67
 824:	0e 94 8b 00 	call	0x116	; 0x116 <BCD_to_SEVEN_SEG_Write>
	}
 828:	8e cf       	rjmp	.-228    	; 0x746 <main+0x38>

0000082a <__tablejump2__>:
 82a:	ee 0f       	add	r30, r30
 82c:	ff 1f       	adc	r31, r31
 82e:	05 90       	lpm	r0, Z+
 830:	f4 91       	lpm	r31, Z
 832:	e0 2d       	mov	r30, r0
 834:	09 94       	ijmp

00000836 <_exit>:
 836:	f8 94       	cli

00000838 <__stop_program>:
 838:	ff cf       	rjmp	.-2      	; 0x838 <__stop_program>
